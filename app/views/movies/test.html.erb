<div class="main-div">
  <div class="container">
    <h1><%= @movie.name %></h1>
    <% testarray = [] %>
    <% trackerTV = "https://tv-v2.api-fetch.website/show/" + @movie.movieid %>
    <% torrent_result = JSON.parse(open(trackerTV).read) %>
    <% if torrent_result != nil %>
      <% i = torrent_result['episodes'].count %>
      <% j = 0 %>
      <% while j < i do %>
        <div class="d-flex">

         <%# Block for importing subtitles %>
        <% if j < @series_ids.count %>
          <% uri = URI.parse("https://rest.opensubtitles.org/search/imdbid-#{@series_ids[j]}/sublanguageid-eng")

          request = Net::HTTP::Get.new(uri)
          request["X-User-Agent"] = "TemporaryUserAgent"

          req_options = {
            use_ssl: uri.scheme == "https",
          }

          response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
            http.request(request)
          end
          better = JSON.parse(response.body)
          sub_url = better[0]["SubDownloadLink"] if better.present? %>
        <% end %>
        <%# Subtitles block ends here %>

        <% testarray << [torrent_result['episodes'][j]['season'], torrent_result['episodes'][j]['episode'], torrent_result['episodes'][j]['torrents']['0']['url'], torrent_result['episodes'][j]['title'], torrent_result['episodes'][0]['torrents']['0']['provider']] %>

          <div class="d-flex"><%= link_to '<i class="fas fa-magnet"></i>'.html_safe, torrent_result['episodes'][j]['torrents']['0']['url'] %> &nbsp <%= link_to '<i class="far fa-closed-captioning"></i>'.html_safe, @serie_subs[j] %></div>
          <div>&nbsp Season: <%= torrent_result['episodes'][j]['season'] %></div>
          <div>&nbsp Episode: <%= torrent_result['episodes'][j]['episode'] %></div>
          <div>&nbsp&nbsp<%= torrent_result['episodes'][j]['title'] %></div>
          <div>&nbsp&nbsp<%=torrent_result['episodes'][0]['torrents']['0']['provider'] %></div>
          <%# raise %>
          <% j += 1 %>
        </div>
      <% end %>
    <% else %>
      <div><%= "Sorry, no info on this serie" %></div>
    <% end %>

  </div>
</div>
 def show
    @movie = Movie.find(params[:id])
    url = "http://www.omdbapi.com/?i=#{@movie.movieid}&apikey=#{ENV['OMDB_KEY']}"
    result = JSON.parse(open(url).read)
    number_seasons = result['totalSeasons'].to_i

    @series_ids = []
    i = 1
    while i <= number_seasons do
      url = "http://www.omdbapi.com/?t=#{@movie.name}&season=#{i}&apikey=#{ENV['OMDB_KEY']}"
      result = JSON.parse(open(url).read)
      number_episodes = result['Episodes'].count
      j = 0
      while j < number_episodes
        @series_ids << (result['Episodes'][j]['imdbID'])[2..-1]
        j += 1
      end
      i += 1
    end
  end


<h1><%= @movie.name %></h1>
    <%# declare array to store parsed info from tv-v2.api  %>
    <% seriearray = [] %>
    <%# parse tracker response %>
    <% trackerTV = "https://tv-v2.api-fetch.website/show/" + @movie.movieid %>
    <% torrent_result = JSON.parse(open(trackerTV).read) %>
    <%# if result, push to array %>
    <% if torrent_result != nil %>
      <% i = torrent_result['episodes'].count %>
      <% j = 0 %>
      <% while j < i do %>

        <% seriearray << [torrent_result['episodes'][j]['season'], torrent_result['episodes'][j]['episode'], torrent_result['episodes'][j]['torrents']['0']['url'], torrent_result['episodes'][j]['title'], torrent_result['episodes'][0]['torrents']['0']['provider']] %>

        <% j += 1 %>

      <% end %>
      <%# sort array - tracker info not sorted by default  %>
      <% seriearray.sort! %>
      <%# mesh tracker info and subtitles together %>
      <% j = 0 %>
      <% i = seriearray.count %>
      <% while j < i do %>
        <div class="d-flex">
          <% current_episode = (seriearray[j][0]).to_s + (seriearray[j][1]).to_s %>

          <%# spit all info; sorted and matched  %>
          <div class="d-flex"><%= link_to '<i class="fas fa-magnet"></i>'.html_safe, seriearray[j][2] %> &nbsp <%= link_to '<i class="far fa-closed-captioning"></i>'.html_safe, @serie_subs[current_episode] %></div>
          <div>&nbsp Season: <%= seriearray[j][0] %></div>
          <div>&nbsp Episode: <%= seriearray[j][1] %></div>
          <div>&nbsp&nbsp<%= seriearray[j][3] %></div>
          <div>&nbsp&nbsp<%=seriearray[j][4] %></div>
        </div>
        <% j += 1 %>
      <% end %>
    <% else %>
      <div><%= "Sorry, no info on this serie" %></div>
    <% end %>


    # #get the number of seasons per series
    # url = "http://www.omdbapi.com/?i=#{@movie.movieid}&apikey=#{ENV['OMDB_KEY']}"
    # result = JSON.parse(open(url).read)
    # number_seasons = result['totalSeasons'].to_i
    # #create a hash for subtitles
    # @serie_subs = {}
    # i = 1
    # while i <= number_seasons do
    #   j = 1
    #   while j < 20
    #     #get subtitles based on language prefrence
    #     uri = URI.parse("https://rest.opensubtitles.org/search/episode-#{j}/imdbid-#{(@movie.movieid)[2..-1]}/season-#{i}/sublanguageid-#{current_user.language == "EN" ? "eng" : "fre"}")
    #     request = Net::HTTP::Get.new(uri)
    #     request["X-User-Agent"] = "TemporaryUserAgent"

    #     req_options = {
    #       use_ssl: uri.scheme == "https",
    #     }

    #     response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
    #       http.request(request)
    #     end

    #     better = JSON.parse(response.body)
    #     sub_url = better[0]["SubDownloadLink"] if better.present?
    #     break if (sub_url == @serie_subs.values.last) && (@serie_subs.count > 1)
    #     j += 1
    #     @serie_subs[better[0]["QueryParameters"]["season"].to_s + better[0]["QueryParameters"]["episode"].to_s] = sub_url
    #   end
    #   i += 1
    # end
